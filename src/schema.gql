# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type EntidadesCampos {
  entidad_campo_id: Int!
  nombre: String!
  tipo: String!
  Entidades: Entidades!
}

type EntidadesSecundariasCampos {
  entidad_secundaria_campo_id: Int!
  nombre: String!
  tipo: String!
}

type EntidadesSecundarias {
  entidad_secundaria_id: Int!
  nombre: String!
  EntidadesSecundariasCamposSec: [EntidadesSecundariasCampos!]!
}

type Entidades {
  entidad_id: Int!
  nombre: String!
  resolver: String
  EntidadesSecundariasSec: [EntidadesSecundarias!]!
  EntidadesCamposSec: [EntidadesCampos!]!
  Permisos: [Permisos!]!
  EntidadesRelacionadas: [EntidadesCampos!]
}

type ProveedoresServicios {
  proveedor_servicio_id: ID!
  Microservicios: Microservicios!
  lista_proveedores: String!
  model_data: String!
  status: String
}

type Microservicios {
  microservicio_id: ID!
  name: String!
  url: String!
  activo: Boolean!
  ProveedoresServiciosSec: [ProveedoresServicios!]
}

type Validaciones {
  validacion_id: ID!
  Microservicios: Microservicios!
  id_referenciado: String!
  id_query: String!
  name_query: String!
  PermisosValidaciones: [PermisosValidaciones!]!
}

type PermisosValidaciones {
  permiso_validacion_id: ID!
  Permisos: Permisos!
  ValidacionesSec: Validaciones!
}

type Permisos {
  permiso_id: ID!
  Entidades: Entidades!
  permiso: String!
  es_publico: Boolean!
  PermisosValidacionesSec: [PermisosValidaciones!]
}

type MenusTraducciones {
  menu_traduccion_id: ID!
  traduccion: String!
  menu_id: Float!
  traduccion_id: Float!
}

type MenusPalabras {
  menu_palabra_id: ID!
  menu_id: Float!
  palabra: String!
}

type Menus {
  menu_id: ID!
  title: String!
  path: String!
  entidad_id: Float
  isEntity: Boolean!
  other_Menus: JSON!
  order: Float
  activo: Float
  MenusPalabrasSec: [MenusPalabras!]
  MenusTraduccionesSec: [MenusTraducciones!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type TbEstadosUsuarios {
  estado_usuario_id: Float!
  nombre: String!
}

type TbMetodosAutenticacion {
  metodo_autenticacion_id: Float!
  nombre: String!
}

type TbRoles {
  rol_id: Float!
  nombre: String!
}

type TbTipoUsuarios {
  tipo_usuario_id: Float!
  nombre: String!
  estado: String!
}

type UsuariosSesiones {
  usuario_sesion_id: Float!
  usuario_id: Float!
  token: String
  fecha_ultimo_login: String!
  Usuarios: Usuarios!
}

type Usuarios {
  usuario_id: Float!
  nombre_usuario: String!
  contrasena: String!
  correo: String!
  salt: String!
  sol_cambio_contrasena: Boolean!
  fecha_vigencia_contrasena: String!
  fecha_creacion: String!
  fecha_actualizacion: String!
  cant_intentos: Float!
  TbEstadosUsuarios: TbEstadosUsuarios!
  TbMetodosAutenticacion: TbMetodosAutenticacion
  TbRoles: TbRoles!
  TbTipoUsuarios: TbTipoUsuarios!
  UsuariosSesionesSec: UsuariosSesiones
  config_totp: String
  cod_recuperacion: String
  qr_code: String
}

type Traducciones {
  traduccion_id: ID!
  idioma: String!
  sigla: String!
}

type Iconos {
  icono_id: ID!
  nombre: String!
  activo: Boolean
  unicode: String!
}

type FuncionalidadesPermisos {
  funcionalidad_permiso_id: ID!
  Funcionalidades: Funcionalidades!
  Permisos: Permisos!
}

type Funcionalidades {
  funcionalidad_id: ID!
  nombre: String!
  Entidades: Entidades!
  FuncionalidadesPermisosSec: [FuncionalidadesPermisos!]!
}

type Query {
  getEstadosUsuarios: [TbEstadosUsuarios!]!
  getEstadoUsuarioById(estado_usuario_id: Float!): TbEstadosUsuarios!
  getFilterEstadosUsuarios(data: FilterEstadoUsuariosInput): [TbEstadosUsuarios!]!
  getTipoUsuarios: [TbTipoUsuarios!]!
  getTipoUsuarioById(tipo_usuario_id: Float!): TbTipoUsuarios!
  getFilterTipoUsuarios(data: FilterTipoUsuariosInput): [TbTipoUsuarios!]!
  getMenus: [Menus!]!
  getMenusInactivos: [Menus!]!
  getMenuByRoleId(usuario_id: Float!): [Menus!]!
  getFilterMenuPalabra(palabra: String!): [Menus!]!
  getRoles: [TbRoles!]!
  getRolById(rol_id: Float!): TbRoles!
  getFilterRoles(rol: String): [TbRoles!]!
  getEntidadesIdsByRolId: [TbRoles!]!
  getEntidades: [Entidades!]!
  getEntidadesForFormularios: [Entidades!]!
  getEntidadForFormularios(entidad_id: Float!): Entidades!
  getEntidadeById(entidad_id: Float!): Entidades!
  getFilterEntidades(nombre: String): [Entidades!]!
  getInfoEntidades(entidad_id: Float!): Entidades!
  getPermisos: [Permisos!]!
  getPermisoById(permiso_id: Float!): Permisos!
  getFilterPermisos(permiso: String!): [Permisos!]!
  getUsuarios: [Usuarios!]!
  getUsuarioById(usuario_id: Float!): Usuarios!
  getFilterUsuarios(nombre: String, email: String): [Usuarios!]!
  signInLogin(data: SignInUserInput!): Usuarios!
  exValidationCodeVerification(data: ValidationCodeVerificationInput!): Usuarios!
  exValidationCodeMail(data: ValidationCodeMailInput!): Usuarios!
  exValidateTotpCode(data: ValidationCodeTotpInput!): Usuarios!
  exValidateRecoveryCode(data: ValidationRecoveryCodeInput!): Usuarios!
  exGetTraducciones: [Traducciones!]!
  getTraduccionById(traduccion_id: Float!): Traducciones!
  getIconos: [Iconos!]!
  getIconoById(icono_id: Float!): Iconos!
  getFilterIconos(nombre: String, unicode: String): [Iconos!]!
  getMicroservicios: [Microservicios!]!
  getMicroservicioById(microservicio_id: Float!): Microservicios!
  getFilterMicroservicios(nombre: String): [Microservicios!]!
  getFuncionalidades: [Funcionalidades!]!
  getFuncionalidadesByentidad(input: FilterFuncionalidadesInput!): [Funcionalidades!]!
  getFuncionalidadById(funcionalidad_id: Float!): Funcionalidades!
  getFilterFuncionalidades(data: FilterFuncionalidadesInput): [Funcionalidades!]!
  getMetodosAutenticacion: [TbMetodosAutenticacion!]!
  getMetodoAutenticacionById(metodo_autenticacion_id: Float!): TbMetodosAutenticacion!
  getFilterMetodosAutenticacion(data: FilterMetodosAutenticacionInput): [TbMetodosAutenticacion!]!
}

input FilterEstadoUsuariosInput {
  nombre: String
}

input FilterTipoUsuariosInput {
  nombre: String
  estado: Estado
}

enum Estado {
  ACTIVO
  INACTIVO
}

input SignInUserInput {
  nombre_usuario: String!
  contrasena: String!
}

input ValidationCodeVerificationInput {
  codigo: String!
  usuario_id: Float!
}

input ValidationCodeMailInput {
  codigo: String!
  usuario_id: Float!
}

input ValidationCodeTotpInput {
  codigo_acceso: String!
  usuario_id: Float!
}

input ValidationRecoveryCodeInput {
  codigo_recuperacion: String!
  usuario_id: Float!
}

input FilterFuncionalidadesInput {
  nombre: String
  entidad_nombre: String
  entidad_id: Float
}

input FilterMetodosAutenticacionInput {
  nombre: String
}

type Mutation {
  createEstadoUsuario(data: CreateEstadoUsuarioInput!): TbEstadosUsuarios!
  updateEstadoUsuario(data: UpdateEstadoUsuarioInput!): TbEstadosUsuarios!
  deleteEstadoUsuario(estado_usuario_id: Float!): TbEstadosUsuarios!
  createTipoUsuario(data: CreateTipoUsuarioInput!): TbTipoUsuarios!
  updateTipoUsuario(data: UpdateTipoUsuarioInput!): TbTipoUsuarios!
  deleteTipoUsuario(tipo_usuario_id: Float!): TbTipoUsuarios!
  createRootMenu: Menus!
  createMenu(data: CreateMenuInput!): Menus!
  updateMenu(data: String!): [Menus!]!
  modifyMenuEstado(menu_id: Float!, activo: Boolean!): Menus!
  createRol(data: CreateRolInput!): TbRoles!
  updateRol(data: UpdateRolInput!): TbRoles!
  deleteRol(rol_id: Float!): TbRoles!
  addFuncionalidadesToRol(data: AddFuncionalidadesToRolInput!): TbRoles!
  updateEntidad(data: UpdateEntidadInput!): Entidades!
  deleteEntidad(entidad_id: Float!): Entidades!
  saveEntidadesDependientes: [Entidades!]!
  saveAdditionalEntidadesDependientes: [Entidades!]!
  updatePermiso(data: UpdatePermisoInput!): Permisos!
  deletePermiso(permiso_id: Float!): Permisos!
  saveEntidadesPermisosValidaciones: [Permisos!]!
  signUpLogin(data: SignUpUserInput!): Usuarios!
  logOutLogin(usuario_id: Float!): Usuarios!
  exChangePasswordLogin(data: ChangePasswordInput!): Usuarios!
  exSendCodeVerification(data: SendCodeVerificationInput!): Usuarios!
  exSendMail(usuario_id: Float!): Usuarios!
  exConfigTotp(usuario_id: Float!): Usuarios!
  exSetActivateConfigTotp(usuario_id: Float!): Usuarios!
  createTraduccion(data: CreateTraduccionesInput!): Traducciones!
  updateTraduccion(data: UpdateTraduccionesInput!): Traducciones!
  deleteTraduccion(traduccion_id: Float!): Traducciones!
  createIcono(data: CreateIconoInput!): Iconos!
  updateIcono(data: UpdateIconoInput!): Iconos!
  deleteIcono(icono_id: Float!): Iconos!
  createMicroservicio(data: CreateMicroservicioInput!): Microservicios!
  updateMicroservicio(data: UpdateMicroservicioInput!): Microservicios!
  deleteMicroservicio(microservicio_id: Float!): Microservicios!
  createFuncionalidad(data: CreateFuncionalidadInput!): Funcionalidades!
  updateFuncionalidad(data: UpdateFuncionalidadInput!): Funcionalidades!
  addPermisosToFuncionalidad(data: AddPermisosToFuncionalidadInput!): Funcionalidades!
  deleteFuncionalidad(funcionalidad_id: Float!): Funcionalidades!
  createMetodoAutenticacion(data: CreateMetodoAutenticacionInput!): TbMetodosAutenticacion!
  updateMetodoAutenticacion(data: UpdateMetodoAutenticacionInput!): TbMetodosAutenticacion!
  deleteMetodoAutenticacion(metodo_autenticacion_id: Float!): TbMetodosAutenticacion!
}

input CreateEstadoUsuarioInput {
  nombre: String!
}

input UpdateEstadoUsuarioInput {
  estado_usuario_id: Float!
  nombre: String!
}

input CreateTipoUsuarioInput {
  nombre: String!
}

input UpdateTipoUsuarioInput {
  tipo_usuario_id: Float!
  nombre: String
  estado: Estado
}

input CreateMenuInput {
  parentId: Float!
  name: String!
  entidad_id: Float
  order: Float
  icon: String
  base: Boolean
  MenusPalabras: [CreateMenuPalabrasInput!]
  MenusTraducciones: [CreateMenuTraduccionInput!]
}

input CreateMenuPalabrasInput {
  palabra: String!
}

input CreateMenuTraduccionInput {
  traduccion: String!
  traduccion_id: Float!
}

input CreateRolInput {
  rol: String!
  RolesFuncionalidades: [CreateRolFuncionalidadInput!]
}

input CreateRolFuncionalidadInput {
  funcionalidad_id: Float!
}

input UpdateRolInput {
  rol_id: Float!
  rol: String
  RolesFuncionalidades: [UpdateRolFuncionalidadInput!]
}

input UpdateRolFuncionalidadInput {
  funcionalidad_id: Float
  rol_funcionalidad_id: Float!
}

input AddFuncionalidadesToRolInput {
  rol_id: Float!
  RolesFuncionalidades: [CreateRolFuncionalidadInput!]
}

input UpdateEntidadInput {
  nombre: String
  resolver: String
  entidad_id: Float!
}

input UpdatePermisoInput {
  entidad_id: Float
  permiso: String
  es_publico: Boolean
  permiso_id: Float!
}

input SignUpUserInput {
  nombre_usuario: String!
  correo: String!
  rol_id: Int!
  estado_usuario_id: Float!
  tipo_usuario_id: Float!
  metodo_autenticacion_id: Float
}

input ChangePasswordInput {
  usuario_id: Float!
  contrasena: String
  nueva_contrasena: String!
}

input SendCodeVerificationInput {
  nombre_usuario: String!
  tipo_solicitud: String
}

input CreateTraduccionesInput {
  idioma: String!
  sigla: String!
}

input UpdateTraduccionesInput {
  idioma: String
  sigla: String
  traduccion_id: Float!
}

input CreateIconoInput {
  nombre: String!
  activo: Boolean
  unicode: String!
}

input UpdateIconoInput {
  nombre: String
  activo: Boolean
  unicode: String
  icono_id: Float!
}

input CreateMicroservicioInput {
  name: String!
  url: String!
  activo: Boolean
}

input UpdateMicroservicioInput {
  name: String
  url: String
  activo: Boolean
  microservicio_id: Float!
}

input CreateFuncionalidadInput {
  nombre: String!
  entidad_id: Float!
  FuncionalidadesPermisos: [CreateFuncionalidadPermisosInput!]!
}

input CreateFuncionalidadPermisosInput {
  permiso_id: Float!
}

input UpdateFuncionalidadInput {
  funcionalidad_id: Float!
  nombre: String
  FuncionalidadesPermisos: [UpdateFuncionalidadPermisosInput!]!
}

input UpdateFuncionalidadPermisosInput {
  funcionalidad_permiso_id: Float!
  permiso_id: Float
}

input AddPermisosToFuncionalidadInput {
  funcionalidad_id: Float!
  FuncionalidadesPermisos: [CreateFuncionalidadPermisosInput!]!
}

input CreateMetodoAutenticacionInput {
  nombre: String!
}

input UpdateMetodoAutenticacionInput {
  metodo_autenticacion_id: Float!
  nombre: String
}
