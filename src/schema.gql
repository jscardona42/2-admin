# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Permissions {
  id: ID!
  name: String!
  permissions: String!
}

type Role {
  id: ID!
  role: String!
}

type RolesPermissions {
  id: ID!
  role_id: Float!
  permissions_menu: [String!]!
  permissions: String!
}

type Menu {
  id: ID!
  title: String!
  path: String!
  isEntity: Boolean!
  subMenu: JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type User {
  id: ID!
  name: String!
  email: String!
  state: Float
  empresa_id: Float
}

type Login {
  id: ID!
  username: String!
  password: String!
  token: String
  salt: String
  role_id: Float!
  active_two_factor: Float
  user_id: Float
  Users: User!
  Twofactor: [Twofactor!]
}

type Twofactor {
  twofactor_id: ID!
  twofactor_secret: String
  config_twofactor: Float
  qr_code: String
  login_id: Float
  recovery_code: String
  validation_method_id: Float!
  time_creation_code: String
}

type Audit {
  audit_id: ID!
  login_id: String
  status: String
  created_at: DateTime
  type: String
  username: String
  role: String
  has_twofactor: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  getLogin: [Login!]!
  getLoginById(id: Float!): Login!
  signInLogin(data: SignInUserInput!): Login!
  getPermissions: [Permissions!]!
  getRoles: [Role!]!
  getRolesPermissions: [RolesPermissions!]!
  rootMenu: Menu!
  filteredMenuForRoleId(roleId: Float!): Menu!
  getTwoFactorById(twofactor_id: Float!): Twofactor!
  getTwoFactorByLoginId(login_id: Float!): Twofactor!
  configTwoFactor(login_id: Float!): Twofactor!
  validateTwoFactorCode(data: TwoFactorAuthenticateInput!): Login!
  validateRecoveryCode(data: RecoveryCodeInput!): Twofactor!
  validationCodeMail(data: ValidateCodeInput!): Twofactor!
  getAudits: [Audit!]!
}

input SignInUserInput {
  username: String!
  password: String!
}

input TwoFactorAuthenticateInput {
  login_id: Float!
  code: String!
}

input RecoveryCodeInput {
  login_id: Float!
  recovery_code: String!
}

input ValidateCodeInput {
  login_id: Float!
  validate_code: String!
}

type Mutation {
  signUpLogin(data: SignUpUserInput!): Login!
  logOutLogin(login_id: Float!): Login!
  createRootMenu: Menu!
  createFolder(folderName: String!, parentId: Float!): Menu!
  insertEntityToFolder(entityName: String!, parentId: Float!): Menu!
  createTwoFactor(data: configTwoFactorInput!): Twofactor!
  setActivateConfigTwofactorTOTP(login_id: Float!): Twofactor!
  sendMail(login_id: Float!): Twofactor!
}

input SignUpUserInput {
  username: String!
  password: String!
  role_id: Float!
}

input configTwoFactorInput {
  login_id: Float!
  validation_method_id: Float!
}
