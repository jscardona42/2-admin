# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Permissions {
  id: ID!
  name: String!
  methodclass: String!
}

type Role {
  id: ID!
  role: String!
}

type RolesPermissions {
  id: ID!
  role_id: Float!
  permissions: String!
}

type Menu {
  id: ID!
  menu1: String
  menu2: String
  menu3: String
  permission: String
}

type Login {
  id: ID!
  username: String!
  password: String!
  token: String
  salt: String
  role_id: Float!
  active_two_factor: Float
  user_id: Float
}

type Twofactor {
  twofactor_id: ID!
  twofactor_secret: String
  config_twofactor: String
  qr_code: String
  login_id: Float
  Login: Login
  recovery_codes: String
}

type Query {
  getLogin: [Login!]!
  getLoginById(id: Float!): Login!
  signInLogin(data: SignInUserInput!): Login!
  configTwoFactor(data: ConfigTwofactorInput!): Twofactor!
  validateTwoFactorCode(data: TwoFactorAuthenticateInput!): Login!
  setTwoFactorConfig(data: SetTwoFactorInput!): Twofactor!
  getTwoFactorById(twofactor_id: Float!): Twofactor!
  validateRecoveryCode(data: RecoveryCodeInput!): Twofactor!
  findAllPermissions: [Permissions!]!

  """It returns all registered roles"""
  roles: [Role!]!

  """It returns all registered roles_Permissions"""
  rolesPermissions: [RolesPermissions!]!
  findAllMenus: [Menu!]!
  getMenuRole(role_id: Float!): [Menu!]!
}

input SignInUserInput {
  username: String!
  password: String!
}

input ConfigTwofactorInput {
  login_id: String!
}

input TwoFactorAuthenticateInput {
  login_id: String!
  code: String!
}

input SetTwoFactorInput {
  twofactor_id: String!
}

input RecoveryCodeInput {
  twofactor_id: Float!
  recovery_code: String!
}

type Mutation {
  signUpLogin(data: SignUpUserInput!): Login!
}

input SignUpUserInput {
  username: String!
  password: String!
  roles: Float!
}
