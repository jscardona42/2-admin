# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type Auditorias {
  auditoria_id: ID!
  login_id: String
  status: String
  fecha_creacion: DateTime
  tipo: String
  username: String
  rol: String
  tiene_doble_factor: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DoblesFactores {
  doble_factor_id: ID!
  otplib_secreta: String
  esta_configurado: Boolean
  qr_code: String
  login_id: Float!
  codigo_recuperacion: String
  metodo_validacion: String!
  fecha_creacion_codigo: String
}

type Usuarios {
  usuario_id: ID!
  nombre: String!
  email: String!
  activo: Boolean
}

type Login {
  login_id: ID!
  username: String!
  password: String!
  token: String
  salt: String
  rol_id: Float!
  tiene_doble_factor: Float
  usuario_id: Float
  Usuarios: Usuarios
  DoblesFactores: [DoblesFactores!]
}

type Entidades {
  entidad_id: ID!
  nombre: String!
  resolver: String
}

type ProveedoresServicios {
  proveedor_servicio_id: ID!
  Microservicios: Microservicios!
  lista_proveedores: String!
  lista_entidades_secundarias: String!
  status: String
}

type Microservicios {
  microservicio_id: ID!
  name: String!
  url: String!
  activo: Boolean!
  ProveedoresServiciosSec: [ProveedoresServicios!]
}

type Validaciones {
  validacion_id: ID!
  Microservicios: Microservicios!
  id_referenciado: String!
  PermisosValidaciones: [PermisosValidaciones!]!
}

type PermisosValidaciones {
  permiso_validacion_id: ID!
  Permisos: Permisos!
  ValidacionesSec: Validaciones!
}

type Permisos {
  permiso_id: ID!
  Entidades: Entidades!
  permiso: String!
  es_publico: Boolean!
  PermisosValidacionesSec: [PermisosValidaciones!]
}

type RolesPermisos {
  rol_permiso_id: ID!
  Roles: Roles!
  Permisos: Permisos!
}

type Roles {
  rol_id: ID!
  rol: String!
  RolesPermisosSec: [RolesPermisos!]!
}

type MenusPalabras {
  menu_palabra_id: ID!
  menu_id: Float!
  palabra: String!
}

type MenusTraducciones {
  menu_traduccion_id: ID!
  traduccion: String!
  menu_id: Float!
  traduccion_id: Float!
}

type Menus {
  menu_id: ID!
  title: String!
  path: String!
  entidad_id: Float
  isEntity: Boolean!
  other_Menus: JSON!
  order: Float
  activo: Float
  MenusPalabras: [MenusPalabras!]
  MenusTraducciones: [MenusTraducciones!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Traducciones {
  traduccion_id: ID!
  idioma: String!
  sigla: String!
}

type Iconos {
  icono_id: ID!
  nombre: String!
  activo: Boolean
  unicode: String!
}

type Query {
  getLogin: [Login!]!
  getLoginById(id: Float!): Login!
  signInLogin(data: SignInUserInput!): Login!
  getMenus: [Menus!]!
  getMenusInactivos: [Menus!]!
  getMenuByRoleId(login_id: Float!): [Menus!]!
  getFilterMenuPalabra(palabra: String!): [Menus!]!
  getDobleFactorById(doblefactor_id: Float!): DoblesFactores!
  getDobleFactorByLoginId(login_id: Float!): DoblesFactores!
  configDobleFactor(login_id: Float!): DoblesFactores!
  exValidateDobleFactorCode(data: DoblesFactoresValidarInput!): Login!
  exValidateRecoveryCode(data: CodigoRecuperacionInput!): DoblesFactores!
  exValidationCodeMail(data: ValidarCodigoInput!): DoblesFactores!
  getAuditorias: [Auditorias!]!
  getRoles: [Roles!]!
  getRolById(rol_id: Float!): Roles!
  getFilterRoles(rol: String): [Roles!]!
  getEntidades: [Entidades!]!
  getEntidadeById(entidad_id: Float!): Entidades!
  getFilterEntidades(nombre: String): [Entidades!]!
  getPermisos: [Permisos!]!
  getPermisoById(permiso_id: Float!): Permisos!
  getFilterPermisos(permiso: String!): [Permisos!]!
  getUsuarios: [Usuarios!]!
  getUsuarioById(usuario_id: Float!): Usuarios!
  getFilterUsuarios(email: String, nombre: String): [Usuarios!]!
  getMenusPalabras: [MenusPalabras!]!
  getMenuPalabraById(menu_palabra_id: Float!): MenusPalabras!
  exGetTraducciones: [Traducciones!]!
  getTraduccionById(traduccion_id: Float!): Traducciones!
  getMenusTraducciones: [MenusTraducciones!]!
  getMenuTraduccionById(menu_traduccion_id: Float!): MenusTraducciones!
  getIconos: [Iconos!]!
  getIconoById(icono_id: Float!): Iconos!
  getFilterIconos(unicode: String, nombre: String): [Iconos!]!
  getMicroservicios: [Microservicios!]!
  getMicroservicioById(microservicio_id: Float!): Microservicios!
  getFilterMicroservicios(nombre: String): [Microservicios!]!
}

input SignInUserInput {
  username: String!
  password: String!
}

input DoblesFactoresValidarInput {
  login_id: Float!
  codigo: String!
}

input CodigoRecuperacionInput {
  login_id: Float!
  codigo_recuperacion: String!
}

input ValidarCodigoInput {
  login_id: Float!
  codigo_validacion: String!
}

type Mutation {
  signUpLogin(data: SignUpUserInput!): Login!
  logOutLogin(login_id: Float!): Login!
  exChangePasswordLogin(data: ChangePasswordInput!): Login!
  createRootMenu: Menus!
  createFolder(data: CreateMenuInput!): Menus!
  insertEntityToFolder(data: CreateMenuInput!): Menus!
  updateMenu(data: String!): [Menus!]!
  modifyMenuEstado(activo: Boolean!, menu_id: Float!): Menus!
  createDobleFactor(data: configDoblesFactoresInput!): DoblesFactores!
  exSetActivateConfigDobleFactorTOTP(login_id: Float!): DoblesFactores!
  exSendMail(login_id: Float!): DoblesFactores!
  createRol(data: CreateRolInput!): Roles!
  updateRol(data: UpdateRolInput!): Roles!
  deleteRol(rol_id: Float!): Roles!
  addPermisosToRol(data: AddPermisosToRolInput!): Roles!
  updateEntidad(data: UpdateEntidadInput!): Entidades!
  deleteEntidad(entidad_id: Float!): Entidades!
  updatePermiso(data: UpdatePermisoInput!): Permisos!
  deletePermiso(permiso_id: Float!): Permisos!
  saveEntidadesPermisosValidaciones: [Permisos!]!
  createUsuario(data: CreateUsuarioInput!): Usuarios!
  updateUsuario(data: UpdateUsuarioInput!): Usuarios!
  deleteUsuario(usuario_id: Float!): Usuarios!
  createMenuPalabra(data: CreateMenuPalabrasInput!): MenusPalabras!
  updateMenuPalabra(data: UpdateMenuPalabrasInput!): MenusPalabras!
  deleteMenuPalabra(menu_palabra_id: Float!): MenusPalabras!
  createTraduccion(data: CreateTraduccionesInput!): Traducciones!
  updateTraduccion(data: UpdateTraduccionesInput!): Traducciones!
  deleteTraduccion(traduccion_id: Float!): Traducciones!
  createMenuTraduccion(data: CreateMenuTraduccionInput!): MenusTraducciones!
  updateMenuTraduccion(data: UpdateMenuTraduccionInput!): MenusTraducciones!
  deleteMenuTraduccion(menu_traduccion_id: Float!): MenusTraducciones!
  createIcono(data: CreateIconoInput!): Iconos!
  updateIcono(data: UpdateIconoInput!): Iconos!
  deleteIcono(icono_id: Float!): Iconos!
  createMicroservicio(data: CreateMicroservicioInput!): Microservicios!
  updateMicroservicio(data: UpdateMicroservicioInput!): Microservicios!
  deleteMicroservicio(microservicio_id: Float!): Microservicios!
}

input SignUpUserInput {
  username: String!
  password: String!
  rol_id: Float!
}

input ChangePasswordInput {
  login_id: Float!
  password: String!
  new_password: String!
}

input CreateMenuInput {
  parentId: Float!
  name: String!
  entidad_id: Float
  order: Float
  icon: String
  base: Boolean
}

input configDoblesFactoresInput {
  login_id: Float!
  metodo_validacion: String!
}

input CreateRolInput {
  rol: String!
  RolesPermisos: [CreateRolPermisoInput!]
}

input CreateRolPermisoInput {
  permiso_id: Float!
}

input UpdateRolInput {
  rol_id: Float!
  rol: String
  RolesPermisos: UpdateRolPermisoInput
}

input UpdateRolPermisoInput {
  permiso_id: Float
  rol_permiso_id: Float!
}

input AddPermisosToRolInput {
  rol_id: Float!
  RolesPermisos: [CreateRolPermisoInput!]
}

input UpdateEntidadInput {
  nombre: String
  resolver: String
  entidad_id: Float!
}

input UpdatePermisoInput {
  entidad_id: Float
  permiso: String
  es_publico: Boolean
  permiso_id: Float!
}

input CreateUsuarioInput {
  nombre: String!
  email: String!
}

input UpdateUsuarioInput {
  nombre: String
  email: String
  usuario_id: Float!
}

input CreateMenuPalabrasInput {
  menu_id: Float!
  palabra: String!
}

input UpdateMenuPalabrasInput {
  menu_id: Float
  palabra: String
  menu_palabra_id: Float!
}

input CreateTraduccionesInput {
  idioma: String!
  sigla: String!
}

input UpdateTraduccionesInput {
  idioma: String
  sigla: String
  traduccion_id: Float!
}

input CreateMenuTraduccionInput {
  traduccion: String!
  menu_id: Float!
  traduccion_id: Float!
}

input UpdateMenuTraduccionInput {
  traduccion: String
  menu_id: Float
  traduccion_id: Float
  menu_traduccion_id: Float!
}

input CreateIconoInput {
  nombre: String!
  activo: Boolean
  unicode: String!
}

input UpdateIconoInput {
  nombre: String
  activo: Boolean
  unicode: String
  icono_id: Float!
}

input CreateMicroservicioInput {
  name: String!
  url: String!
  activo: Boolean
}

input UpdateMicroservicioInput {
  name: String
  url: String
  activo: Boolean
  microservicio_id: Float!
}
