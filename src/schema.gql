# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

type ProveedoresServicios {
  proveedor_servicio_id: ID!
  Microservicios: Microservicios!
  lista_proveedores: String!
  model_data: String!
  status: String
}

type Microservicios {
  microservicio_id: ID!
  name: String!
  url: String!
  activo: Boolean!
  ProveedoresServiciosSec: [ProveedoresServicios!]
}

type Validaciones {
  validacion_id: ID!
  Microservicios: Microservicios!
  id_referenciado: String!
  id_query: String!
  name_query: String!
  PermisosValidaciones: [PermisosValidaciones!]!
}

type PermisosValidaciones {
  permiso_validacion_id: ID!
  Permisos: Permisos!
  ValidacionesSec: Validaciones!
}

type Permisos {
  permiso_id: ID!
  Entidades: Entidades!
  permiso: String!
  es_publico: Boolean!
  PermisosValidacionesSec: [PermisosValidaciones!]
}

type EntidadesCampos {
  entidad_campo_id: Int!
  nombre: String!
  tipo: String!
}

type EntidadesSecundariasCampos {
  entidad_secundaria_campo_id: Int!
  nombre: String!
  tipo: String!
}

type EntidadesSecundarias {
  entidad_secundaria_id: Int!
  nombre: String!
  EntidadesSecundariasCamposSec: [EntidadesSecundariasCampos!]!
}

type Entidades {
  entidad_id: Int!
  nombre: String!
  resolver: String
  EntidadesSecundariasSec: [EntidadesSecundarias!]!
  EntidadesCamposSec: [EntidadesCampos!]!
  Permisos: [Permisos!]!
}

type FuncionalidadesPermisos {
  funcionalidad_permiso_id: ID!
  Funcionalidades: Funcionalidades!
  Permisos: Permisos!
}

type Funcionalidades {
  funcionalidad_id: ID!
  nombre: String!
  Entidades: Entidades!
  FuncionalidadesPermisosSec: [FuncionalidadesPermisos!]!
}

type RolesFuncionalidades {
  rol_funcionalidad_id: ID!
  Roles: Roles!
  Funcionalidades: Funcionalidades!
}

type Roles {
  rol_id: ID!
  rol: String!
  RolesFuncionalidadesSec: [RolesFuncionalidades!]
}

type DoblesFactores {
  doble_factor_id: ID!
  otplib_secreta: String
  esta_configurado: Boolean
  qr_code: String
  usuario_id: Float!
  codigo_recuperacion: String
  metodo_validacion: String!
  fecha_creacion_codigo: String
}

type UsuariosSesionesSec {
  token: String
}

type Usuarios {
  usuario_id: ID!
  nombre: String!
  email: String!
  activo: Boolean
  conexion_externa: Boolean
  username: String!
  password: String!
  salt: String
  rol_id: Float!
  tiene_doble_factor: Boolean
  DoblesFactores: [DoblesFactores!]
  UsuariosSesionesSec: UsuariosSesionesSec!
}

type MenusTraducciones {
  menu_traduccion_id: ID!
  traduccion: String!
  menu_id: Float!
  traduccion_id: Float!
}

type MenusPalabras {
  menu_palabra_id: ID!
  menu_id: Float!
  palabra: String!
}

type Menus {
  menu_id: ID!
  title: String!
  path: String!
  entidad_id: Float
  isEntity: Boolean!
  other_Menus: JSON!
  order: Float
  activo: Float
  MenusPalabrasSec: [MenusPalabras!]
  MenusTraduccionesSec: [MenusTraducciones!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Traducciones {
  traduccion_id: ID!
  idioma: String!
  sigla: String!
}

type Iconos {
  icono_id: ID!
  nombre: String!
  activo: Boolean
  unicode: String!
}

type Query {
  getMenus: [Menus!]!
  getMenusInactivos: [Menus!]!
  getMenuByRoleId(usuario_id: Float!): [Menus!]!
  getFilterMenuPalabra(palabra: String!): [Menus!]!
  getDobleFactorById(doblefactor_id: Float!): DoblesFactores!
  getDobleFactorByLoginId(usuario_id: Float!): DoblesFactores!
  exValidateDobleFactorCode(data: DoblesFactoresValidarInput!): Usuarios!
  exValidateRecoveryCode(data: CodigoRecuperacionInput!): DoblesFactores!
  exValidationCodeMail(data: ValidarCodigoInput!): DoblesFactores!
  getRoles: [Roles!]!
  getRolById(rol_id: Float!): Roles!
  getFilterRoles(rol: String): [Roles!]!
  getEntidadesIdsByRolId: [Roles!]!
  getEntidades: [Entidades!]!
  getEntidadesForFormularios: [Entidades!]!
  getEntidadForFormularios(entidad_id: Float!): Entidades!
  getEntidadeById(entidad_id: Float!): Entidades!
  getFilterEntidades(nombre: String): [Entidades!]!
  getPermisos: [Permisos!]!
  getPermisoById(permiso_id: Float!): Permisos!
  getFilterPermisos(permiso: String!): [Permisos!]!
  getUsuarios: [Usuarios!]!
  getUsuarioById(usuario_id: Float!): Usuarios!
  getFilterUsuarios(nombre: String, email: String): [Usuarios!]!
  signInLogin(data: SignInUserInput!): Usuarios!
  exGetTraducciones: [Traducciones!]!
  getTraduccionById(traduccion_id: Float!): Traducciones!
  getIconos: [Iconos!]!
  getIconoById(icono_id: Float!): Iconos!
  getFilterIconos(nombre: String, unicode: String): [Iconos!]!
  getMicroservicios: [Microservicios!]!
  getMicroservicioById(microservicio_id: Float!): Microservicios!
  getFilterMicroservicios(nombre: String): [Microservicios!]!
  getFuncionalidades: [Funcionalidades!]!
  getFuncionalidadesByentidad(input: FilterFuncionalidadesInput!): [Funcionalidades!]!
  getFuncionalidadById(funcionalidad_id: Float!): Funcionalidades!
  getFilterFuncionalidades(data: FilterFuncionalidadesInput): [Funcionalidades!]!
}

input DoblesFactoresValidarInput {
  usuario_id: Float!
  codigo: String!
}

input CodigoRecuperacionInput {
  usuario_id: Float!
  codigo_recuperacion: String!
}

input ValidarCodigoInput {
  usuario_id: Float!
  codigo_validacion: String!
}

input SignInUserInput {
  username: String!
  password: String!
}

input FilterFuncionalidadesInput {
  nombre: String
  entidad_nombre: String
  entidad_id: Float
}

type Mutation {
  createRootMenu: Menus!
  createMenu(data: CreateMenuInput!): Menus!
  updateMenu(data: String!): [Menus!]!
  modifyMenuEstado(menu_id: Float!, activo: Boolean!): Menus!
  createDobleFactor(data: configDoblesFactoresInput!): DoblesFactores!
  configDobleFactor(usuario_id: Float!): DoblesFactores!
  exSetActivateConfigDobleFactorTOTP(usuario_id: Float!): DoblesFactores!
  exSendMail(usuario_id: Float!): DoblesFactores!
  createRol(data: CreateRolInput!): Roles!
  updateRol(data: UpdateRolInput!): Roles!
  deleteRol(rol_id: Float!): Roles!
  addFuncionalidadesToRol(data: AddFuncionalidadesToRolInput!): Roles!
  updateEntidad(data: UpdateEntidadInput!): Entidades!
  deleteEntidad(entidad_id: Float!): Entidades!
  saveSecondaryEntities: [Entidades!]!
  updatePermiso(data: UpdatePermisoInput!): Permisos!
  deletePermiso(permiso_id: Float!): Permisos!
  saveEntidadesPermisosValidaciones: [Permisos!]!
  signUpLogin(data: SignUpUserInput!): Usuarios!
  logOutLogin(usuario_id: Float!): Usuarios!
  exChangePasswordLogin(data: ChangePasswordInput!): Usuarios!
  createTraduccion(data: CreateTraduccionesInput!): Traducciones!
  updateTraduccion(data: UpdateTraduccionesInput!): Traducciones!
  deleteTraduccion(traduccion_id: Float!): Traducciones!
  createIcono(data: CreateIconoInput!): Iconos!
  updateIcono(data: UpdateIconoInput!): Iconos!
  deleteIcono(icono_id: Float!): Iconos!
  createMicroservicio(data: CreateMicroservicioInput!): Microservicios!
  updateMicroservicio(data: UpdateMicroservicioInput!): Microservicios!
  deleteMicroservicio(microservicio_id: Float!): Microservicios!
  createFuncionalidad(data: CreateFuncionalidadInput!): Funcionalidades!
  updateFuncionalidad(data: UpdateFuncionalidadInput!): Funcionalidades!
  addPermisosToFuncionalidad(data: AddPermisosToFuncionalidadInput!): Funcionalidades!
  deleteFuncionalidad(funcionalidad_id: Float!): Funcionalidades!
}

input CreateMenuInput {
  parentId: Float!
  name: String!
  entidad_id: Float
  order: Float
  icon: String
  base: Boolean
  MenusPalabras: [CreateMenuPalabrasInput!]
  MenusTraducciones: [CreateMenuTraduccionInput!]
}

input CreateMenuPalabrasInput {
  palabra: String!
}

input CreateMenuTraduccionInput {
  traduccion: String!
  traduccion_id: Float!
}

input configDoblesFactoresInput {
  usuario_id: Float!
  metodo_validacion: MetodosValidacion!
}

enum MetodosValidacion {
  EMAIL
  TOTP
}

input CreateRolInput {
  rol: String!
  RolesFuncionalidades: [CreateRolFuncionalidadInput!]
}

input CreateRolFuncionalidadInput {
  funcionalidad_id: Float!
}

input UpdateRolInput {
  rol_id: Float!
  rol: String
  RolesFuncionalidades: [UpdateRolFuncionalidadInput!]
}

input UpdateRolFuncionalidadInput {
  funcionalidad_id: Float
  rol_funcionalidad_id: Float!
}

input AddFuncionalidadesToRolInput {
  rol_id: Float!
  RolesFuncionalidades: [CreateRolFuncionalidadInput!]
}

input UpdateEntidadInput {
  nombre: String
  resolver: String
  entidad_id: Float!
}

input UpdatePermisoInput {
  entidad_id: Float
  permiso: String
  es_publico: Boolean
  permiso_id: Float!
}

input SignUpUserInput {
  conexion_externa: Boolean!
  nombre: String!
  email: String!
  username: String!
  password: String!
  rol_id: Int!
}

input ChangePasswordInput {
  usuario_id: Float!
  password: String!
  new_password: String!
}

input CreateTraduccionesInput {
  idioma: String!
  sigla: String!
}

input UpdateTraduccionesInput {
  idioma: String
  sigla: String
  traduccion_id: Float!
}

input CreateIconoInput {
  nombre: String!
  activo: Boolean
  unicode: String!
}

input UpdateIconoInput {
  nombre: String
  activo: Boolean
  unicode: String
  icono_id: Float!
}

input CreateMicroservicioInput {
  name: String!
  url: String!
  activo: Boolean
}

input UpdateMicroservicioInput {
  name: String
  url: String
  activo: Boolean
  microservicio_id: Float!
}

input CreateFuncionalidadInput {
  nombre: String!
  entidad_id: Float!
  FuncionalidadesPermisos: [CreateFuncionalidadPermisosInput!]!
}

input CreateFuncionalidadPermisosInput {
  permiso_id: Float!
}

input UpdateFuncionalidadInput {
  funcionalidad_id: Float!
  nombre: String
  FuncionalidadesPermisos: [UpdateFuncionalidadPermisosInput!]!
}

input UpdateFuncionalidadPermisosInput {
  funcionalidad_permiso_id: Float!
  permiso_id: Float
}

input AddPermisosToFuncionalidadInput {
  funcionalidad_id: Float!
  FuncionalidadesPermisos: [CreateFuncionalidadPermisosInput!]!
}
