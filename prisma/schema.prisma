generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Login {
  id                Int         @id @default(autoincrement()) @db.SmallInt
  username          String
  password          String?
  token             String?
  salt              String?
  role_id           Int         @db.SmallInt
  active_two_factor Int?        @default(0) @db.SmallInt
  user_id           Int?        @db.SmallInt
  Roles             Roles       @relation(fields: [role_id], references: [id])
  Users             Users?      @relation(fields: [user_id], references: [id])
  Twofactor         Twofactor[]
}

model Menus {
  id         Int        @id @default(autoincrement())
  title      String
  path       String
  isEntity   Boolean
  subMenu    Menus[] @relation("treeMenuTotreeMenu")
  parentMenu   Menus?  @relation("treeMenuTotreeMenu", fields: [parentMenuId], references: [id])
  parentMenuId Int?
}

model Microservices {
  id       Int     @id @default(autoincrement()) @db.SmallInt
  name     String? @db.VarChar(255)
  hostname String? @db.VarChar(255)
  port     Int?
  url      String? @db.VarChar(32)
  state    Int?
}

model Roles {
  id                Int                 @id @default(autoincrement()) @db.SmallInt
  role              String              @db.VarChar(100)
  Login             Login[]
  Roles_permissions Roles_permissions[]
}

model Roles_permissions {
  id          Int    @id @default(autoincrement()) @db.SmallInt
  role_id     Int    @db.SmallInt
  permissions String[] 
  Roles       Roles  @relation(fields: [role_id], references: [id])
}

model Twofactor {
  twofactor_id     Int     @id @default(autoincrement()) @db.SmallInt
  twofactor_secret String? @db.VarChar(255)
  qr_code          String?
  config_twofactor Int?    @default(0) @db.SmallInt
  login_id         Int     @db.SmallInt
  recovery_codes   String? @db.VarChar(255)
  Login            Login   @relation(fields: [login_id], references: [id])
}

model Users {
  id    Int     @id @default(autoincrement()) @db.SmallInt
  name  String  @db.VarChar(100)
  email String  @db.VarChar(100)
  state Int?    @default(1) @db.SmallInt
  Login Login[]
}
